.TH "man _printf" "3" "2025-07-25" "" "_printf manual page"

.SH "NAME"
_printf

.SH "SYNOPSIS"
.B
#include "main.h"

.B
int _printf(const char *format,...);

.SH "DESCRIPTION"
_printf writes a string of characters and variadic arguments on the standard output.
.PP
Variadic arguments can be different types : int, char, strings (char*). Doubles and floats are not supported yet.
.PP
_printf function should print each variadic argument according to its type.
.PP
The type of variadic arguments passed to _printf function should be mentioned with a 
.B
specifier 
in order to be correctly formatted. 
.br
Specifiers are indicated by % followed by a specific character.
.br
Specifiers must be written in the "const char*format" string. 
.br

.B The first specifier must be written according to the first variadic argument given to _printf. 
.br
.B The second specifier must be written according to the second variadic argument given to _printf. 
.br
.B Etc...
.PP
Flags, width, precision and lenght modifiers are not supported yet.

.B Specifiers :

.B %c
is used to format a character. "c" stands for "character".
.br
.B %s 
is used to format a string of characters. "s" stands for "string".
.br
.B %i or %d
are used to format an integer. "i" stands for "integer" and "d" stands for "decimal".

.B Notes about specifiers :

If "%" is the only character given to the function. It should not print and return -1 value.
.br
If "%" is followed by "%", function should print only one "%". 
.br
If "%" is followed by an 
.B unknown specifier
, function should print "%" and the following character.

.SH "RETURN VALUE"
If _printf succeeds, it returns the number of characters printed, null bytes excluded.
If empty string is given, _printf should return (0).

If _printf 
.B 
returns -1, 
it means :
.br
1/ const char* format is null
.br
2/ const char* format is equal to "%"

.SH "AUTHOR(S)"
---
.br
Mathieu Maj√©rus - wrote the code, manpage, readme, flowchart
.br
---
.br
Maxime Regnier - contributed to the flowchart
